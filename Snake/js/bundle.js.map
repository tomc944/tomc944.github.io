{"version":3,"sources":["webpack/bootstrap 8d0cb9dde6764d8173c7","./js/main.js","./js/snake-view.js","./js/snake.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACLD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,UAAU;AAC7B,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;;;;;;;AC/FA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA,0CAAyC;AACzC,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8d0cb9dde6764d8173c7\n **/","var SnakeView = require('./snake-view.js');\n\nwindow.$l(function() {\n  var rootEl = window.$l('.snake');\n  new SnakeView(rootEl);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./snake.js');\n\nvar SIZE = 30;\n\nfunction View($rootEl, restart) {\n  this.board = new Board(SIZE);\n  this.$rootEl = $rootEl;\n  this.restart = restart || false;\n  this.setupBoard();\n  this.registerEvents();\n  this.intervalId = window.setInterval(this.step.bind(this), 50);\n}\n\nwindow.$l.extend(View.prototype, {\n  setupBoard: function() {\n    for (var i = 0; i < SIZE; i++) {\n      for (var j = 0; j < SIZE; j++) {\n        var $div = document.createElement('div');\n        $div = window.$l($div);\n        $div.addClass('row-' + i + '-col-'+j);\n        $div.addClass('board-piece');\n        this.$rootEl.append($div);\n      }\n    }\n  },\n\n  registerEvents: function() {\n    document.addEventListener('keydown', this.handleKeyEvent.bind(this));\n\n    if (!this.restart) {\n      var startButton = '<button class=\"start-button\" type=\"button\">Start Game!</button>'\n      window.$l('figure').append(startButton)\n      window.$l('.start-button').on('click', this.startGame.bind(this))\n    } else {\n      this.board.playing = true;\n    }\n  },\n\n  handleKeyEvent: function(e) {\n    var code = e.keyCode;\n    var direction = (String.fromCharCode(code)).toLowerCase();\n    this.board.turnSnake(direction);\n  },\n\n  startGame: function(e) {\n    window.$l('.start-button').remove();\n    this.board.playing = true;\n  },\n\n  render: function() {\n    window.$l('div').removeClass('snake-segment');\n\n    this.board.snake.segments.forEach(function(pos) {\n      var row = pos[0];\n      var col = pos[1];\n      window.$l('.snake').\n        find('.row-' + row + '-col-'+ col).addClass('snake-segment');\n    });\n\n    window.$l('div').removeClass('apple');\n    var applePos = this.board.applePos;\n\n    window.$l('.snake').\n      find('.row-' + applePos[0]+ \"-col-\" + applePos[1]).addClass('apple');\n  },\n\n  createReset: function() {\n    var resetButton = '<button class=\"reset-button\" type=\"button\">Gameover... Play again?</button>'\n    window.$l('figure').append(resetButton)\n    window.$l('.reset-button').on('click', this.restartGame.bind(this))\n    window.clearInterval(this.intervalId);\n  },\n\n  restartGame: function() {\n    // removes old board\n    var gameDivs = window.$l('.snake').children()\n    gameDivs.remove()\n    document.addEventListener('keydown', this.handleKeyEvent.bind(this));\n\n    // creates new board\n    var rootEl = window.$l('.snake');\n    new View(rootEl, true);\n  },\n\n  step: function() {\n    if (this.board.playing === true) {\n      this.board.moveSnake();\n      this.render();\n      if (this.board.gameOver) {\n        this.createReset();\n      }\n    }\n  },\n});\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake-view.js\n ** module id = 1\n ** module chunks = 0\n **/","var KEYS1 = ['w', 's', 'a', 'd'];\nvar DIFF = [[-1,  0],\n            [ 1,  0],\n            [ 0, -1],\n            [ 0,  1]];\n\nfunction Snake(boardSize, direction) {\n  this.direction = direction; // set default direction \"right\"\n  this.segments = [];   // stores the snake\n  this.boardSize = boardSize;\n  this.createSnake(8);\n  this.isGrowing = false;\n}\n\nSnake.prototype.createSnake = function(length) {\n  var row = Math.floor(this.boardSize / 2);\n  var colStart = Math.floor(this.boardSize / 4);\n  for (var i = 0; i < length; i++) {\n    this.segments.unshift([row, colStart + i]);\n  }\n};\n\nSnake.prototype.move = function(keys) {\n  var currentHead = this.segments[0];\n  var diff = DIFF[keys.indexOf(this.direction)];\n  var newHead = [currentHead[0] + diff[0], currentHead[1] + diff[1]];\n  this.segments.unshift(newHead);\n  if (!this.isGrowing){\n    this.segments.pop();\n  }\n  this.isGrowing = false;\n};\n\nSnake.prototype.turn = function(newDir, keys) {\n  if (this.isValidDirection(newDir, keys)) {\n    this.direction = newDir;\n  }\n};\n\nSnake.prototype.isValidDirection = function(newDir, keys) {\n  if (keys.indexOf(newDir) === -1) {\n    return false;\n  } else if (this.isOppositeDirection(newDir, keys)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nSnake.prototype.isOppositeDirection = function(newDir, keys) {\n  var currentDiff = DIFF[keys.indexOf(this.direction)];\n  var newDiff = DIFF[keys.indexOf(newDir)];\n  if (currentDiff[0] + newDiff[0] === 0){\n    return false;\n  } else {\n    return true;\n  }\n};\n\n\nfunction Board(boardSize) {\n  this.snake = new Snake(boardSize, 'd');     // hold a snake\n  this.applePos = null;             // stores an apple on the board\n  this.numMoves = 0;\n  this.boardSize = boardSize;\n  this.gameOver = false;\n  this.randomApple();\n  this.playing = false;\n}\n\nBoard.prototype.moveSnake = function() {\n  this.snake.move(KEYS1);\n  this.numMoves += 1;\n\n  if (this.isGameOver()) {\n    this.gameOver = true;\n  } else if (this.isEatingApple(this.snake.segments)){\n    this.snake.isGrowing = true;\n    this.randomApple();\n  }\n};\n\nBoard.prototype.turnSnake = function (key) {\n  if (KEYS1.indexOf(key) !== -1) {\n    this.snake.turn(key, KEYS1);\n  }\n};\n\nBoard.prototype.isGameOver = function() {\n  this.snakeHead = this.snake.segments[0];\n\n  if (this.checkAllCollisions()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nBoard.prototype.checkAllCollisions = function() {\n  return (this.hitsSelf() ||\n    this.isHeadHittingWall(this.snakeHead))\n}\n\nBoard.prototype.hitsSelf = function() {\n  var snakeBody = this.snake.segments.slice(1)\n\n  for (i=0; i<snakeBody.length; i++) {\n    if (_.isEqual(snakeBody[i], this.snakeHead)) {\n      return true\n    }\n  }\n  return false\n}\n\nBoard.prototype.isHeadHittingWall = function(snakeHead) {\n  if (snakeHead[0] < 0 || snakeHead[1] < 0\n    || snakeHead[0] >= this.boardSize\n    || snakeHead[1] >= this.boardSize) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nBoard.prototype.isEatingApple = function(snake) {\n  var snakeHead = snake[0];\n  if (this.applePos[0] === snakeHead[0] && this.applePos[1] === snakeHead[1]) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nBoard.prototype.randomApple = function() {\n  do {\n    var pos = this.randomPos();\n  } while (this.snake.segments.indexOf(pos) !== -1);\n  this.applePos = pos;\n};\n\nBoard.prototype.randomPos = function() {\n  var x = Math.floor(Math.random() * this.boardSize);\n  var y = Math.floor(Math.random() * this.boardSize);\n  return [x, y];\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}